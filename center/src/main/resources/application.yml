server:
  port: 9001
  servlet:
    context-path: /center

spring:
  servlet:
    multipart:
      max-file-size: 5MB
  application:
    name: center

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 8.0驱动支持5.5, 5.6, 5.7, 8.0,slave是5.1...只能用5.1的驱动
    # 5.1驱动支持5.5, 5.6*, 5.7*, 8.0*, 5.1也支持..
    #    driverClassName: com.mysql.cj.jdbc.Driver
    #    driverClassName: com.mysql.jdbc.Driver
    druid:
      master: # 主库数据源
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.146.134:3306/magicude?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: 02pH0J1wUE28GBQ8
        jpa:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
        filters: stat,wall

      initial-size: 2 # 初始连接数
      max-active: 40 # 最大连接池数量
      min-idle: 5 # 最小连接池数量
      max-wait: 60000 # 配置获取连接等待超时的时间
      pool-prepared-statements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      timeBetweenEvictionRunsMillis: 60000   # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /monitor/druid/*
        login-username: magicude
        login-password: 5V0Yyz64SUZ3S489
        allow: 127.0.0.1 #上线需要修改

  rabbitmq:
    host: 192.168.146.134
    #    host: 127.0.0.1
    username: magicude
    password: kVh9h29A93J63i0L
  redis:
    host: 192.168.146.134
    #    host: 127.0.0.1
    port: 6379
    password: z539s8e8vA8Y5M43
  quartz:
    properties:
      jobStore:
        class: org.quartz.simpl.RAMJobStore
      threadPool:
        class: org.quartz.simpl.SimpleThreadPool
        threadCount: 20
        threadPriority: 5
  mail:
    host: test # 不需要修改
    username: test # 不需要修改
    password: test # 不需要修改
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          timeout: 10000 # 10秒
          connectiontimeout: 10000
          writetimeout: 10000

eureka:
  user:
    name: magicude
    password: 8YTpzY9H9I45A8U6
  client:
    register-with-eureka: true   # 把该服务注册到Eureka，被别的服务调用
    fetch-registry: true  # 该服务需要从Eureka获取其他服务的注册信息
    service-url: # 向哪个Eureka注册
      #      defaultZone: http://127.0.0.1:8686/eureka
      defaultZone: http://${eureka.user.name}:${eureka.user.password}@127.0.0.1:8686/eureka
  instance: # 如果服务在本地注册和调用，该配置可以省略；如果注册远程调用，该必须写的
    prefer-ip-address: true

jwt:
  config:
    key: 8T5N4o539D6jg56SN8TS4534xKY35nAv
    #半个小时
    #    ttl: 1800000
    ttl: 3600000